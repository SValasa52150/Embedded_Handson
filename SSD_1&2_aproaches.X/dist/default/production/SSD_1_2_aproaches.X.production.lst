

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Nov 02 22:57:02 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0005                     _PORTA	set	5
   168     0008                     _PORTD	set	8
   169     0085                     _TRISA	set	133
   170     0088                     _TRISD	set	136
   171                           
   172                           	psect	cinit
   173     07FC                     start_initialization:	
   174                           ; #config settings
   175                           
   176     07FC                     __initialization:
   177     07FC                     end_of_initialization:	
   178                           ;End of C runtime variable initialization code
   179                           
   180     07FC                     __end_of__initialization:
   181     07FC  0183               	clrf	3
   182     07FD  120A  118A  2F7F   	ljmp	_main	;jump to C main() function
   183                           
   184                           	psect	cstackCOMMON
   185     0070                     __pcstackCOMMON:
   186     0070                     ?_init_config:
   187     0070                     ??_init_config:	
   188                           ; 1 bytes @ 0x0
   189                           
   190     0070                     ?_main:	
   191                           ; 1 bytes @ 0x0
   192                           
   193     0070                     ??_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0070                     main@i:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 2 bytes @ 0x0
   201     0070                     	ds	2
   202     0072                     main@j:
   203                           
   204                           ; 2 bytes @ 0x2
   205     0072                     	ds	2
   206     0074                     main@k:
   207                           
   208                           ; 2 bytes @ 0x4
   209     0074                     	ds	2
   210     0076                     main@l:
   211                           
   212                           ; 2 bytes @ 0x6
   213     0076                     	ds	2
   214                           
   215                           	psect	maintext
   216     077F                     __pmaintext:	
   217 ;;
   218 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   219 ;;
   220 ;; *************** function _main *****************
   221 ;; Defined at:
   222 ;;		line 23 in file "main.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  l               2    6[COMMON] int 
   227 ;;  k               2    4[COMMON] int 
   228 ;;  j               2    2[COMMON] int 
   229 ;;  i               2    0[COMMON] int 
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : B00/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   239 ;;      Params:         0       0       0       0       0
   240 ;;      Locals:         8       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0
   242 ;;      Totals:         8       0       0       0       0
   243 ;;Total ram usage:        8 bytes
   244 ;; Hardware stack levels required when called: 1
   245 ;; This function calls:
   246 ;;		_init_config
   247 ;; This function is called by:
   248 ;;		Startup code after reset
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252     077F                     _main:	
   253                           ;psect for function _main
   254                           
   255     077F                     l575:	
   256                           ;incstack = 0
   257                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   258                           
   259                           
   260                           ;main.c: 24:     init_config();
   261     077F  120A  118A  2773  120A  118A  	fcall	_init_config
   262     0784                     l577:
   263                           
   264                           ;main.c: 30:         PORTA = (PORTA & 0b00000011)|(1<<2);
   265     0784  1283               	bcf	3,5	;RP0=0, select bank0
   266     0785  1303               	bcf	3,6	;RP1=0, select bank0
   267     0786  0805               	movf	5,w	;volatile
   268     0787  3903               	andlw	3
   269     0788  3804               	iorlw	4
   270     0789  0085               	movwf	5	;volatile
   271     078A                     l579:
   272                           
   273                           ;main.c: 31:         PORTD = 0b00000110;
   274     078A  3006               	movlw	6
   275     078B  0088               	movwf	8	;volatile
   276     078C                     l581:
   277                           
   278                           ;main.c: 32:         for (int i=0;i<100;i++);
   279     078C  01F0               	clrf	main@i
   280     078D  01F1               	clrf	main@i+1
   281     078E                     l587:
   282     078E  3001               	movlw	1
   283     078F  07F0               	addwf	main@i,f
   284     0790  1803               	skipnc
   285     0791  0AF1               	incf	main@i+1,f
   286     0792  3000               	movlw	0
   287     0793  07F1               	addwf	main@i+1,f
   288     0794                     l589:
   289     0794  0871               	movf	main@i+1,w
   290     0795  3A80               	xorlw	128
   291     0796  00FF               	movwf	btemp+1
   292     0797  3080               	movlw	128
   293     0798  027F               	subwf	btemp+1,w
   294     0799  1D03               	skipz
   295     079A  2F9D               	goto	u15
   296     079B  3064               	movlw	100
   297     079C  0270               	subwf	main@i,w
   298     079D                     u15:
   299     079D  1C03               	skipc
   300     079E  2FA0               	goto	u11
   301     079F  2FA1               	goto	u10
   302     07A0                     u11:
   303     07A0  2F8E               	goto	l587
   304     07A1                     u10:
   305     07A1                     l591:
   306                           
   307                           ;main.c: 33:         PORTA = (PORTA & 0b00000011)|(1<<3);
   308     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   309     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   310     07A3  0805               	movf	5,w	;volatile
   311     07A4  3903               	andlw	3
   312     07A5  3808               	iorlw	8
   313     07A6  0085               	movwf	5	;volatile
   314     07A7                     l593:
   315                           
   316                           ;main.c: 34:         PORTD = 0b01011011;
   317     07A7  305B               	movlw	91
   318     07A8  0088               	movwf	8	;volatile
   319                           
   320                           ;main.c: 35:         for (int j=0;j<100;j++);
   321     07A9  01F2               	clrf	main@j
   322     07AA  01F3               	clrf	main@j+1
   323     07AB                     l599:
   324     07AB  3001               	movlw	1
   325     07AC  07F2               	addwf	main@j,f
   326     07AD  1803               	skipnc
   327     07AE  0AF3               	incf	main@j+1,f
   328     07AF  3000               	movlw	0
   329     07B0  07F3               	addwf	main@j+1,f
   330     07B1                     l601:
   331     07B1  0873               	movf	main@j+1,w
   332     07B2  3A80               	xorlw	128
   333     07B3  00FF               	movwf	btemp+1
   334     07B4  3080               	movlw	128
   335     07B5  027F               	subwf	btemp+1,w
   336     07B6  1D03               	skipz
   337     07B7  2FBA               	goto	u25
   338     07B8  3064               	movlw	100
   339     07B9  0272               	subwf	main@j,w
   340     07BA                     u25:
   341     07BA  1C03               	skipc
   342     07BB  2FBD               	goto	u21
   343     07BC  2FBE               	goto	u20
   344     07BD                     u21:
   345     07BD  2FAB               	goto	l599
   346     07BE                     u20:
   347     07BE                     l603:
   348                           
   349                           ;main.c: 36:         PORTA = (PORTA & 0b00000011)|(1<<4);
   350     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   351     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   352     07C0  0805               	movf	5,w	;volatile
   353     07C1  3903               	andlw	3
   354     07C2  3810               	iorlw	16
   355     07C3  0085               	movwf	5	;volatile
   356     07C4                     l605:
   357                           
   358                           ;main.c: 37:         PORTD = 0b01001111;
   359     07C4  304F               	movlw	79
   360     07C5  0088               	movwf	8	;volatile
   361                           
   362                           ;main.c: 38:         for (int k=0;k<100;k++);
   363     07C6  01F4               	clrf	main@k
   364     07C7  01F5               	clrf	main@k+1
   365     07C8                     l611:
   366     07C8  3001               	movlw	1
   367     07C9  07F4               	addwf	main@k,f
   368     07CA  1803               	skipnc
   369     07CB  0AF5               	incf	main@k+1,f
   370     07CC  3000               	movlw	0
   371     07CD  07F5               	addwf	main@k+1,f
   372     07CE                     l613:
   373     07CE  0875               	movf	main@k+1,w
   374     07CF  3A80               	xorlw	128
   375     07D0  00FF               	movwf	btemp+1
   376     07D1  3080               	movlw	128
   377     07D2  027F               	subwf	btemp+1,w
   378     07D3  1D03               	skipz
   379     07D4  2FD7               	goto	u35
   380     07D5  3064               	movlw	100
   381     07D6  0274               	subwf	main@k,w
   382     07D7                     u35:
   383     07D7  1C03               	skipc
   384     07D8  2FDA               	goto	u31
   385     07D9  2FDB               	goto	u30
   386     07DA                     u31:
   387     07DA  2FC8               	goto	l611
   388     07DB                     u30:
   389     07DB                     l615:
   390                           
   391                           ;main.c: 39:         PORTA = (PORTA & 0b00000011)|(1<<5);
   392     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   393     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   394     07DD  0805               	movf	5,w	;volatile
   395     07DE  3903               	andlw	3
   396     07DF  3820               	iorlw	32
   397     07E0  0085               	movwf	5	;volatile
   398     07E1                     l617:
   399                           
   400                           ;main.c: 40:         PORTD = 0b01100110;
   401     07E1  3066               	movlw	102
   402     07E2  0088               	movwf	8	;volatile
   403                           
   404                           ;main.c: 41:         for (int l=0;l<100;l++);
   405     07E3  01F6               	clrf	main@l
   406     07E4  01F7               	clrf	main@l+1
   407     07E5                     l623:
   408     07E5  3001               	movlw	1
   409     07E6  07F6               	addwf	main@l,f
   410     07E7  1803               	skipnc
   411     07E8  0AF7               	incf	main@l+1,f
   412     07E9  3000               	movlw	0
   413     07EA  07F7               	addwf	main@l+1,f
   414     07EB                     l625:
   415     07EB  0877               	movf	main@l+1,w
   416     07EC  3A80               	xorlw	128
   417     07ED  00FF               	movwf	btemp+1
   418     07EE  3080               	movlw	128
   419     07EF  027F               	subwf	btemp+1,w
   420     07F0  1D03               	skipz
   421     07F1  2FF4               	goto	u45
   422     07F2  3064               	movlw	100
   423     07F3  0276               	subwf	main@l,w
   424     07F4                     u45:
   425     07F4  1C03               	skipc
   426     07F5  2FF7               	goto	u41
   427     07F6  2FF8               	goto	u40
   428     07F7                     u41:
   429     07F7  2FE5               	goto	l623
   430     07F8                     u40:
   431     07F8  2F84               	goto	l577
   432     07F9  120A  118A  2800   	ljmp	start
   433     07FC                     __end_of_main:
   434                           
   435                           	psect	text1
   436     0773                     __ptext1:	
   437 ;; *************** function _init_config *****************
   438 ;; Defined at:
   439 ;;		line 6 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466     0773                     _init_config:	
   467                           ;psect for function _init_config
   468                           
   469     0773                     l571:	
   470                           ;incstack = 0
   471                           ; Regs used in _init_config: [wreg+status,2]
   472                           
   473                           
   474                           ;main.c: 7:     TRISD = 0b00000000;
   475     0773  1683               	bsf	3,5	;RP0=1, select bank1
   476     0774  1303               	bcf	3,6	;RP1=0, select bank1
   477     0775  0188               	clrf	8	;volatile
   478                           
   479                           ;main.c: 8:     PORTD = 0b00000000;
   480     0776  1283               	bcf	3,5	;RP0=0, select bank0
   481     0777  1303               	bcf	3,6	;RP1=0, select bank0
   482     0778  0188               	clrf	8	;volatile
   483     0779                     l573:
   484                           
   485                           ;main.c: 9:     TRISA = TRISA & 0B00000011;
   486     0779  1683               	bsf	3,5	;RP0=1, select bank1
   487     077A  1303               	bcf	3,6	;RP1=0, select bank1
   488     077B  0805               	movf	5,w	;volatile
   489     077C  3903               	andlw	3
   490     077D  0085               	movwf	5	;volatile
   491     077E                     l11:
   492     077E  0008               	return
   493     077F                     __end_of_init_config:
   494     007E                     btemp	set	126	;btemp
   495     007E                     wtemp0	set	126
   496                           
   497                           	psect	idloc
   498                           
   499                           ;Config register IDLOC0 @ 0x2000
   500                           ;	unspecified, using default values
   501     2000                     	org	8192
   502     2000  3FFF               	dw	16383
   503                           
   504                           ;Config register IDLOC1 @ 0x2001
   505                           ;	unspecified, using default values
   506     2001                     	org	8193
   507     2001  3FFF               	dw	16383
   508                           
   509                           ;Config register IDLOC2 @ 0x2002
   510                           ;	unspecified, using default values
   511     2002                     	org	8194
   512     2002  3FFF               	dw	16383
   513                           
   514                           ;Config register IDLOC3 @ 0x2003
   515                           ;	unspecified, using default values
   516     2003                     	org	8195
   517     2003  3FFF               	dw	16383
   518                           
   519                           	psect	config
   520                           
   521                           ;Config register CONFIG @ 0x2007
   522                           ;	Oscillator Selection bits
   523                           ;	FOSC = 0x3, unprogrammed default
   524                           ;	Watchdog Timer Enable bit
   525                           ;	WDTE = OFF, WDT disabled
   526                           ;	Power-up Timer Enable bit
   527                           ;	PWRTE = 0x1, unprogrammed default
   528                           ;	Brown-out Reset Enable bit
   529                           ;	BOREN = 0x1, unprogrammed default
   530                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   531                           ;	LVP = 0x1, unprogrammed default
   532                           ;	Data EEPROM Memory Code Protection bit
   533                           ;	CPD = 0x1, unprogrammed default
   534                           ;	Flash Program Memory Write Enable bits
   535                           ;	WRT = 0x3, unprogrammed default
   536                           ;	In-Circuit Debugger Mode bit
   537                           ;	DEBUG = 0x1, unprogrammed default
   538                           ;	Flash Program Memory Code Protection bit
   539                           ;	CP = 0x1, unprogrammed default
   540     2007                     	org	8199
   541     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     120
                                              0 COMMON     8     8      0
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Nov 02 22:57:02 2024

                     l11 077E                       u10 07A1                       u11 07A0  
                     u20 07BE                       u21 07BD                       u30 07DB  
                     u31 07DA                       u15 079D                       u40 07F8  
                     u41 07F7                       u25 07BA                       u35 07D7  
                     u45 07F4                      l601 07B1                      l611 07C8  
                    l603 07BE                      l613 07CE                      l605 07C4  
                    l623 07E5                      l615 07DB                      l625 07EB  
                    l617 07E1                      l571 0773                      l573 0779  
                    l581 078C                      l591 07A1                      l575 077F  
                    l593 07A7                      l577 0784                      l587 078E  
                    l579 078A                      l589 0794                      l599 07AB  
                   _main 077F                     btemp 007E                     start 0000  
                  ?_main 0070             ?_init_config 0070                    _PORTA 0005  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  main@i 0070                    main@j 0072                    main@k 0074  
                  main@l 0076                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 077F  
                __ptext1 0773     end_of_initialization 07FC      start_initialization 07FC  
          ??_init_config 0070                ___latbits 0002      __end_of_init_config 077F  
            _init_config 0773  
